// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: bench.proto

package gambol.examples.serialize.benchmark.protobuf.model;

/**
 * Protobuf type {@code benchmark.Foo}
 */
public final class Foo extends
    com.google.protobuf.GeneratedMessage implements
    // @@protoc_insertion_point(message_implements:benchmark.Foo)
    FooOrBuilder {
  // Use Foo.newBuilder() to construct.
  private Foo(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
    super(builder);
    this.unknownFields = builder.getUnknownFields();
  }
  private Foo(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

  private static final Foo defaultInstance;
  public static Foo getDefaultInstance() {
    return defaultInstance;
  }

  public Foo getDefaultInstanceForType() {
    return defaultInstance;
  }

  private final com.google.protobuf.UnknownFieldSet unknownFields;
  @Override
  public final com.google.protobuf.UnknownFieldSet
      getUnknownFields() {
    return this.unknownFields;
  }
  private Foo(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    initFields();
    int mutable_bitField0_ = 0;
    com.google.protobuf.UnknownFieldSet.Builder unknownFields =
        com.google.protobuf.UnknownFieldSet.newBuilder();
    try {
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          default: {
            if (!parseUnknownField(input, unknownFields,
                                   extensionRegistry, tag)) {
              done = true;
            }
            break;
          }
          case 8: {
            int rawValue = input.readEnum();
            Type value = Type.valueOf(rawValue);
            if (value == null) {
              unknownFields.mergeVarintField(1, rawValue);
            } else {
              bitField0_ |= 0x00000001;
              type_ = value;
            }
            break;
          }
          case 16: {
            bitField0_ |= 0x00000002;
            flag_ = input.readBool();
            break;
          }
          case 24: {
            bitField0_ |= 0x00000004;
            num32_ = input.readInt32();
            break;
          }
          case 32: {
            bitField0_ |= 0x00000008;
            num64_ = input.readInt64();
            break;
          }
          case 42: {
            com.google.protobuf.ByteString bs = input.readBytes();
            bitField0_ |= 0x00000010;
            str_ = bs;
            break;
          }
          case 82: {
            if (!((mutable_bitField0_ & 0x00000020) == 0x00000020)) {
              children_ = new java.util.ArrayList<Foo>();
              mutable_bitField0_ |= 0x00000020;
            }
            children_.add(input.readMessage(Foo.PARSER, extensionRegistry));
            break;
          }
        }
      }
    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
      throw e.setUnfinishedMessage(this);
    } catch (java.io.IOException e) {
      throw new com.google.protobuf.InvalidProtocolBufferException(
          e.getMessage()).setUnfinishedMessage(this);
    } finally {
      if (((mutable_bitField0_ & 0x00000020) == 0x00000020)) {
        children_ = java.util.Collections.unmodifiableList(children_);
      }
      this.unknownFields = unknownFields.build();
      makeExtensionsImmutable();
    }
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return Bench.internal_static_benchmark_Foo_descriptor;
  }

  protected FieldAccessorTable
      internalGetFieldAccessorTable() {
    return Bench.internal_static_benchmark_Foo_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            Foo.class, Builder.class);
  }

  public static com.google.protobuf.Parser<Foo> PARSER =
      new com.google.protobuf.AbstractParser<Foo>() {
    public Foo parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return new Foo(input, extensionRegistry);
    }
  };

  @Override
  public com.google.protobuf.Parser<Foo> getParserForType() {
    return PARSER;
  }

  private int bitField0_;
  public static final int TYPE_FIELD_NUMBER = 1;
  private Type type_;
  /**
   * <code>optional .benchmark.Type type = 1;</code>
   */
  public boolean hasType() {
    return ((bitField0_ & 0x00000001) == 0x00000001);
  }
  /**
   * <code>optional .benchmark.Type type = 1;</code>
   */
  public Type getType() {
    return type_;
  }

  public static final int FLAG_FIELD_NUMBER = 2;
  private boolean flag_;
  /**
   * <code>optional bool flag = 2;</code>
   */
  public boolean hasFlag() {
    return ((bitField0_ & 0x00000002) == 0x00000002);
  }
  /**
   * <code>optional bool flag = 2;</code>
   */
  public boolean getFlag() {
    return flag_;
  }

  public static final int NUM32_FIELD_NUMBER = 3;
  private int num32_;
  /**
   * <code>optional int32 num32 = 3;</code>
   */
  public boolean hasNum32() {
    return ((bitField0_ & 0x00000004) == 0x00000004);
  }
  /**
   * <code>optional int32 num32 = 3;</code>
   */
  public int getNum32() {
    return num32_;
  }

  public static final int NUM64_FIELD_NUMBER = 4;
  private long num64_;
  /**
   * <code>optional int64 num64 = 4;</code>
   */
  public boolean hasNum64() {
    return ((bitField0_ & 0x00000008) == 0x00000008);
  }
  /**
   * <code>optional int64 num64 = 4;</code>
   */
  public long getNum64() {
    return num64_;
  }

  public static final int STR_FIELD_NUMBER = 5;
  private Object str_;
  /**
   * <code>optional string str = 5;</code>
   */
  public boolean hasStr() {
    return ((bitField0_ & 0x00000010) == 0x00000010);
  }
  /**
   * <code>optional string str = 5;</code>
   */
  public String getStr() {
    Object ref = str_;
    if (ref instanceof String) {
      return (String) ref;
    } else {
      com.google.protobuf.ByteString bs =
          (com.google.protobuf.ByteString) ref;
      String s = bs.toStringUtf8();
      if (bs.isValidUtf8()) {
        str_ = s;
      }
      return s;
    }
  }
  /**
   * <code>optional string str = 5;</code>
   */
  public com.google.protobuf.ByteString
      getStrBytes() {
    Object ref = str_;
    if (ref instanceof String) {
      com.google.protobuf.ByteString b =
          com.google.protobuf.ByteString.copyFromUtf8(
              (String) ref);
      str_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int CHILDREN_FIELD_NUMBER = 10;
  private java.util.List<Foo> children_;
  /**
   * <code>repeated .benchmark.Foo children = 10;</code>
   */
  public java.util.List<Foo> getChildrenList() {
    return children_;
  }
  /**
   * <code>repeated .benchmark.Foo children = 10;</code>
   */
  public java.util.List<? extends FooOrBuilder>
      getChildrenOrBuilderList() {
    return children_;
  }
  /**
   * <code>repeated .benchmark.Foo children = 10;</code>
   */
  public int getChildrenCount() {
    return children_.size();
  }
  /**
   * <code>repeated .benchmark.Foo children = 10;</code>
   */
  public Foo getChildren(int index) {
    return children_.get(index);
  }
  /**
   * <code>repeated .benchmark.Foo children = 10;</code>
   */
  public FooOrBuilder getChildrenOrBuilder(
      int index) {
    return children_.get(index);
  }

  private void initFields() {
    type_ = Type.UNKNOWN;
    flag_ = false;
    num32_ = 0;
    num64_ = 0L;
    str_ = "";
    children_ = java.util.Collections.emptyList();
  }
  private byte memoizedIsInitialized = -1;
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    getSerializedSize();
    if (((bitField0_ & 0x00000001) == 0x00000001)) {
      output.writeEnum(1, type_.getNumber());
    }
    if (((bitField0_ & 0x00000002) == 0x00000002)) {
      output.writeBool(2, flag_);
    }
    if (((bitField0_ & 0x00000004) == 0x00000004)) {
      output.writeInt32(3, num32_);
    }
    if (((bitField0_ & 0x00000008) == 0x00000008)) {
      output.writeInt64(4, num64_);
    }
    if (((bitField0_ & 0x00000010) == 0x00000010)) {
      output.writeBytes(5, getStrBytes());
    }
    for (int i = 0; i < children_.size(); i++) {
      output.writeMessage(10, children_.get(i));
    }
    getUnknownFields().writeTo(output);
  }

  private int memoizedSerializedSize = -1;
  public int getSerializedSize() {
    int size = memoizedSerializedSize;
    if (size != -1) return size;

    size = 0;
    if (((bitField0_ & 0x00000001) == 0x00000001)) {
      size += com.google.protobuf.CodedOutputStream
        .computeEnumSize(1, type_.getNumber());
    }
    if (((bitField0_ & 0x00000002) == 0x00000002)) {
      size += com.google.protobuf.CodedOutputStream
        .computeBoolSize(2, flag_);
    }
    if (((bitField0_ & 0x00000004) == 0x00000004)) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(3, num32_);
    }
    if (((bitField0_ & 0x00000008) == 0x00000008)) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt64Size(4, num64_);
    }
    if (((bitField0_ & 0x00000010) == 0x00000010)) {
      size += com.google.protobuf.CodedOutputStream
        .computeBytesSize(5, getStrBytes());
    }
    for (int i = 0; i < children_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(10, children_.get(i));
    }
    size += getUnknownFields().getSerializedSize();
    memoizedSerializedSize = size;
    return size;
  }

  private static final long serialVersionUID = 0L;
  @Override
  protected Object writeReplace()
      throws java.io.ObjectStreamException {
    return super.writeReplace();
  }

  public static Foo parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static Foo parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static Foo parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static Foo parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static Foo parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return PARSER.parseFrom(input);
  }
  public static Foo parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return PARSER.parseFrom(input, extensionRegistry);
  }
  public static Foo parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return PARSER.parseDelimitedFrom(input);
  }
  public static Foo parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return PARSER.parseDelimitedFrom(input, extensionRegistry);
  }
  public static Foo parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return PARSER.parseFrom(input);
  }
  public static Foo parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return PARSER.parseFrom(input, extensionRegistry);
  }

  public static Builder newBuilder() { return Builder.create(); }
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder(Foo prototype) {
    return newBuilder().mergeFrom(prototype);
  }
  public Builder toBuilder() { return newBuilder(this); }

  @Override
  protected Builder newBuilderForType(
      BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * Protobuf type {@code benchmark.Foo}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessage.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:benchmark.Foo)
      FooOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return Bench.internal_static_benchmark_Foo_descriptor;
    }

    protected FieldAccessorTable
        internalGetFieldAccessorTable() {
      return Bench.internal_static_benchmark_Foo_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              Foo.class, Builder.class);
    }

    // Construct using gambol.examples.protobuf.benchmark.protobuf.model.Foo.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        getChildrenFieldBuilder();
      }
    }
    private static Builder create() {
      return new Builder();
    }

    public Builder clear() {
      super.clear();
      type_ = Type.UNKNOWN;
      bitField0_ = (bitField0_ & ~0x00000001);
      flag_ = false;
      bitField0_ = (bitField0_ & ~0x00000002);
      num32_ = 0;
      bitField0_ = (bitField0_ & ~0x00000004);
      num64_ = 0L;
      bitField0_ = (bitField0_ & ~0x00000008);
      str_ = "";
      bitField0_ = (bitField0_ & ~0x00000010);
      if (childrenBuilder_ == null) {
        children_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000020);
      } else {
        childrenBuilder_.clear();
      }
      return this;
    }

    public Builder clone() {
      return create().mergeFrom(buildPartial());
    }

    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return Bench.internal_static_benchmark_Foo_descriptor;
    }

    public Foo getDefaultInstanceForType() {
      return Foo.getDefaultInstance();
    }

    public Foo build() {
      Foo result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    public Foo buildPartial() {
      Foo result = new Foo(this);
      int from_bitField0_ = bitField0_;
      int to_bitField0_ = 0;
      if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
        to_bitField0_ |= 0x00000001;
      }
      result.type_ = type_;
      if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
        to_bitField0_ |= 0x00000002;
      }
      result.flag_ = flag_;
      if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
        to_bitField0_ |= 0x00000004;
      }
      result.num32_ = num32_;
      if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
        to_bitField0_ |= 0x00000008;
      }
      result.num64_ = num64_;
      if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
        to_bitField0_ |= 0x00000010;
      }
      result.str_ = str_;
      if (childrenBuilder_ == null) {
        if (((bitField0_ & 0x00000020) == 0x00000020)) {
          children_ = java.util.Collections.unmodifiableList(children_);
          bitField0_ = (bitField0_ & ~0x00000020);
        }
        result.children_ = children_;
      } else {
        result.children_ = childrenBuilder_.build();
      }
      result.bitField0_ = to_bitField0_;
      onBuilt();
      return result;
    }

    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof Foo) {
        return mergeFrom((Foo)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(Foo other) {
      if (other == Foo.getDefaultInstance()) return this;
      if (other.hasType()) {
        setType(other.getType());
      }
      if (other.hasFlag()) {
        setFlag(other.getFlag());
      }
      if (other.hasNum32()) {
        setNum32(other.getNum32());
      }
      if (other.hasNum64()) {
        setNum64(other.getNum64());
      }
      if (other.hasStr()) {
        bitField0_ |= 0x00000010;
        str_ = other.str_;
        onChanged();
      }
      if (childrenBuilder_ == null) {
        if (!other.children_.isEmpty()) {
          if (children_.isEmpty()) {
            children_ = other.children_;
            bitField0_ = (bitField0_ & ~0x00000020);
          } else {
            ensureChildrenIsMutable();
            children_.addAll(other.children_);
          }
          onChanged();
        }
      } else {
        if (!other.children_.isEmpty()) {
          if (childrenBuilder_.isEmpty()) {
            childrenBuilder_.dispose();
            childrenBuilder_ = null;
            children_ = other.children_;
            bitField0_ = (bitField0_ & ~0x00000020);
            childrenBuilder_ =
              com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                 getChildrenFieldBuilder() : null;
          } else {
            childrenBuilder_.addAllMessages(other.children_);
          }
        }
      }
      this.mergeUnknownFields(other.getUnknownFields());
      return this;
    }

    public final boolean isInitialized() {
      return true;
    }

    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Foo parsedMessage = null;
      try {
        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        parsedMessage = (Foo) e.getUnfinishedMessage();
        throw e;
      } finally {
        if (parsedMessage != null) {
          mergeFrom(parsedMessage);
        }
      }
      return this;
    }
    private int bitField0_;

    private Type type_ = Type.UNKNOWN;
    /**
     * <code>optional .benchmark.Type type = 1;</code>
     */
    public boolean hasType() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional .benchmark.Type type = 1;</code>
     */
    public Type getType() {
      return type_;
    }
    /**
     * <code>optional .benchmark.Type type = 1;</code>
     */
    public Builder setType(Type value) {
      if (value == null) {
        throw new NullPointerException();
      }
      bitField0_ |= 0x00000001;
      type_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>optional .benchmark.Type type = 1;</code>
     */
    public Builder clearType() {
      bitField0_ = (bitField0_ & ~0x00000001);
      type_ = Type.UNKNOWN;
      onChanged();
      return this;
    }

    private boolean flag_ ;
    /**
     * <code>optional bool flag = 2;</code>
     */
    public boolean hasFlag() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional bool flag = 2;</code>
     */
    public boolean getFlag() {
      return flag_;
    }
    /**
     * <code>optional bool flag = 2;</code>
     */
    public Builder setFlag(boolean value) {
      bitField0_ |= 0x00000002;
      flag_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>optional bool flag = 2;</code>
     */
    public Builder clearFlag() {
      bitField0_ = (bitField0_ & ~0x00000002);
      flag_ = false;
      onChanged();
      return this;
    }

    private int num32_ ;
    /**
     * <code>optional int32 num32 = 3;</code>
     */
    public boolean hasNum32() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional int32 num32 = 3;</code>
     */
    public int getNum32() {
      return num32_;
    }
    /**
     * <code>optional int32 num32 = 3;</code>
     */
    public Builder setNum32(int value) {
      bitField0_ |= 0x00000004;
      num32_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>optional int32 num32 = 3;</code>
     */
    public Builder clearNum32() {
      bitField0_ = (bitField0_ & ~0x00000004);
      num32_ = 0;
      onChanged();
      return this;
    }

    private long num64_ ;
    /**
     * <code>optional int64 num64 = 4;</code>
     */
    public boolean hasNum64() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional int64 num64 = 4;</code>
     */
    public long getNum64() {
      return num64_;
    }
    /**
     * <code>optional int64 num64 = 4;</code>
     */
    public Builder setNum64(long value) {
      bitField0_ |= 0x00000008;
      num64_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>optional int64 num64 = 4;</code>
     */
    public Builder clearNum64() {
      bitField0_ = (bitField0_ & ~0x00000008);
      num64_ = 0L;
      onChanged();
      return this;
    }

    private Object str_ = "";
    /**
     * <code>optional string str = 5;</code>
     */
    public boolean hasStr() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional string str = 5;</code>
     */
    public String getStr() {
      Object ref = str_;
      if (!(ref instanceof String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          str_ = s;
        }
        return s;
      } else {
        return (String) ref;
      }
    }
    /**
     * <code>optional string str = 5;</code>
     */
    public com.google.protobuf.ByteString
        getStrBytes() {
      Object ref = str_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b =
            com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        str_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <code>optional string str = 5;</code>
     */
    public Builder setStr(
        String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000010;
      str_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>optional string str = 5;</code>
     */
    public Builder clearStr() {
      bitField0_ = (bitField0_ & ~0x00000010);
      str_ = getDefaultInstance().getStr();
      onChanged();
      return this;
    }
    /**
     * <code>optional string str = 5;</code>
     */
    public Builder setStrBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000010;
      str_ = value;
      onChanged();
      return this;
    }

    private java.util.List<Foo> children_ =
      java.util.Collections.emptyList();
    private void ensureChildrenIsMutable() {
      if (!((bitField0_ & 0x00000020) == 0x00000020)) {
        children_ = new java.util.ArrayList<Foo>(children_);
        bitField0_ |= 0x00000020;
       }
    }

    private com.google.protobuf.RepeatedFieldBuilder<
        Foo, Builder, FooOrBuilder> childrenBuilder_;

    /**
     * <code>repeated .benchmark.Foo children = 10;</code>
     */
    public java.util.List<Foo> getChildrenList() {
      if (childrenBuilder_ == null) {
        return java.util.Collections.unmodifiableList(children_);
      } else {
        return childrenBuilder_.getMessageList();
      }
    }
    /**
     * <code>repeated .benchmark.Foo children = 10;</code>
     */
    public int getChildrenCount() {
      if (childrenBuilder_ == null) {
        return children_.size();
      } else {
        return childrenBuilder_.getCount();
      }
    }
    /**
     * <code>repeated .benchmark.Foo children = 10;</code>
     */
    public Foo getChildren(int index) {
      if (childrenBuilder_ == null) {
        return children_.get(index);
      } else {
        return childrenBuilder_.getMessage(index);
      }
    }
    /**
     * <code>repeated .benchmark.Foo children = 10;</code>
     */
    public Builder setChildren(
        int index, Foo value) {
      if (childrenBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureChildrenIsMutable();
        children_.set(index, value);
        onChanged();
      } else {
        childrenBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     * <code>repeated .benchmark.Foo children = 10;</code>
     */
    public Builder setChildren(
        int index, Builder builderForValue) {
      if (childrenBuilder_ == null) {
        ensureChildrenIsMutable();
        children_.set(index, builderForValue.build());
        onChanged();
      } else {
        childrenBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <code>repeated .benchmark.Foo children = 10;</code>
     */
    public Builder addChildren(Foo value) {
      if (childrenBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureChildrenIsMutable();
        children_.add(value);
        onChanged();
      } else {
        childrenBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     * <code>repeated .benchmark.Foo children = 10;</code>
     */
    public Builder addChildren(
        int index, Foo value) {
      if (childrenBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureChildrenIsMutable();
        children_.add(index, value);
        onChanged();
      } else {
        childrenBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     * <code>repeated .benchmark.Foo children = 10;</code>
     */
    public Builder addChildren(
        Builder builderForValue) {
      if (childrenBuilder_ == null) {
        ensureChildrenIsMutable();
        children_.add(builderForValue.build());
        onChanged();
      } else {
        childrenBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     * <code>repeated .benchmark.Foo children = 10;</code>
     */
    public Builder addChildren(
        int index, Builder builderForValue) {
      if (childrenBuilder_ == null) {
        ensureChildrenIsMutable();
        children_.add(index, builderForValue.build());
        onChanged();
      } else {
        childrenBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <code>repeated .benchmark.Foo children = 10;</code>
     */
    public Builder addAllChildren(
        Iterable<? extends Foo> values) {
      if (childrenBuilder_ == null) {
        ensureChildrenIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, children_);
        onChanged();
      } else {
        childrenBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     * <code>repeated .benchmark.Foo children = 10;</code>
     */
    public Builder clearChildren() {
      if (childrenBuilder_ == null) {
        children_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000020);
        onChanged();
      } else {
        childrenBuilder_.clear();
      }
      return this;
    }
    /**
     * <code>repeated .benchmark.Foo children = 10;</code>
     */
    public Builder removeChildren(int index) {
      if (childrenBuilder_ == null) {
        ensureChildrenIsMutable();
        children_.remove(index);
        onChanged();
      } else {
        childrenBuilder_.remove(index);
      }
      return this;
    }
    /**
     * <code>repeated .benchmark.Foo children = 10;</code>
     */
    public Builder getChildrenBuilder(
        int index) {
      return getChildrenFieldBuilder().getBuilder(index);
    }
    /**
     * <code>repeated .benchmark.Foo children = 10;</code>
     */
    public FooOrBuilder getChildrenOrBuilder(
        int index) {
      if (childrenBuilder_ == null) {
        return children_.get(index);  } else {
        return childrenBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     * <code>repeated .benchmark.Foo children = 10;</code>
     */
    public java.util.List<? extends FooOrBuilder>
         getChildrenOrBuilderList() {
      if (childrenBuilder_ != null) {
        return childrenBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(children_);
      }
    }
    /**
     * <code>repeated .benchmark.Foo children = 10;</code>
     */
    public Builder addChildrenBuilder() {
      return getChildrenFieldBuilder().addBuilder(
          Foo.getDefaultInstance());
    }
    /**
     * <code>repeated .benchmark.Foo children = 10;</code>
     */
    public Builder addChildrenBuilder(
        int index) {
      return getChildrenFieldBuilder().addBuilder(
          index, Foo.getDefaultInstance());
    }
    /**
     * <code>repeated .benchmark.Foo children = 10;</code>
     */
    public java.util.List<Builder>
         getChildrenBuilderList() {
      return getChildrenFieldBuilder().getBuilderList();
    }
    private com.google.protobuf.RepeatedFieldBuilder<
        Foo, Builder, FooOrBuilder>
        getChildrenFieldBuilder() {
      if (childrenBuilder_ == null) {
        childrenBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
            Foo, Builder, FooOrBuilder>(
                children_,
                ((bitField0_ & 0x00000020) == 0x00000020),
                getParentForChildren(),
                isClean());
        children_ = null;
      }
      return childrenBuilder_;
    }

    // @@protoc_insertion_point(builder_scope:benchmark.Foo)
  }

  static {
    defaultInstance = new Foo(true);
    defaultInstance.initFields();
  }

  // @@protoc_insertion_point(class_scope:benchmark.Foo)
}

